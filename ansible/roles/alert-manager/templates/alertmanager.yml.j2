global:


# The directory from which notification templates are read.
templates:
- 'templates/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 3s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5s

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 1h

  # A default receiver
  receiver: {{ slack.default_receiver_name }}

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.

  # The child route trees.
  routes:
    - match:
        severity: critical
      receiver: {{ slack.default_receiver_name }}
  # This route handles all alerts coming from a database service. If there's
  # no team to handle it, it defaults to the DB team.
  #  - match:
  #      service: database
  #    receiver: mail-receiver

receivers:
- name: {{ slack.default_receiver_name }}
  slack_configs:
  - channel: "{{ slack.notifications_channel }}"
    api_url: {{ slack.webhook_url }}
    icon_url: {{ slack.icon_url }}
    send_resolved: true
    title: '{{ template "custom_title" . }}'
    text: '{{ template "custom_slack_message" . }}'

    #- name: 'critical-mail-receiver'
    #  slack_configs:
    #  - api_url: https://hooks.slack.com/services/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
    #    channel: '#prom-alert'
    #
