apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      initContainers:
        - name: fetch-sql-init
          image: andriykalashnykov/wget:1.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              wget --no-check-certificate "https://raw.githubusercontent.com/geek-kb/DevopsStuff/master/k8s/mysql-get-put/mysql/init.sql" -O /docker-entrypoint-initdb.d/init.sql
              sed -i 's/${TEMP_MYSQL_USER}/$(MYSQL_APP_USER)/g' /docker-entrypoint-initdb.d/init.sql
              sed -i 's/${TEMP_MYSQL_PASSWORD}/$(MYSQL_APP_PASSWORD)/g' /docker-entrypoint-initdb.d/init.sql
              sed -i 's/${TEMP_MYSQL_DATABASE}/$(MYSQL_DATABASE)/g' /docker-entrypoint-initdb.d/init.sql

      containers:
        - name: db
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-root-creds
                  key: DB_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: db-config-map
                  key: DB_NAME
          volumeMounts:
            - mountPath: "/var/lib/mysql"
              name: mysql-data
          ports:
            - containerPort: 3306
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
